/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 .\map.glb -Ttse
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["road-1"]: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
  };
};

export function Map(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/world/map-transformed.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["road-1"].geometry}
        material={nodes["road-1"].material}
        scale={[24, 1, 100]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["building-1003"].geometry}
        material={materials.PaletteMaterial001}
        position={[-12.5, 9, 4.5]}
        scale={[1, 18, 6]}
      />
    </group>
  );
}

useGLTF.preload("/models/world/map-transformed.glb");
